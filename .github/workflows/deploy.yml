name: Deploy to ec2

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [closed]

jobs:
  deploy:
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Make .env file
        run: |
          echo "PORT=${{ secrets.PORT }}" > .env
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env
          echo "CLOUD_NAME=${{ secrets.CLOUD_NAME }}" >> .env
          echo "CLOUD_KEY=${{ secrets.CLOUD_KEY }}" >> .env
          echo "CLOUD_SECRET=${{ secrets.CLOUD_SECRET }}" >> .env
          echo "EMAIL_NODEMAILER=${{ secrets.EMAIL_NODEMAILER }}" >> .env
          echo "PASSWORD_NODEMAILER=${{ secrets.PASSWORD_NODEMAILER }}" >> .env
          echo "PREFIX_ADMIN=${{ secrets.PREFIX_ADMIN }}" >> .env
          echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> .env
          echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env
          echo "ACCESS_TOKEN_LIFE=${{ secrets.ACCESS_TOKEN_LIFE }}" >> .env
          echo "REFRESH_TOKEN_LIFE=${{ secrets.REFRESH_TOKEN_LIFE }}" >> .env
          echo "SECRET_KEY_COOKIE=${{ secrets.SECRET_KEY_COOKIE }}" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" >> .env

      - name: Install Dependencies
        run: npm install

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            ARGS: "-rlgoDzvc -i --delete"
            REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
            REMOTE_USER: ${{ secrets.REMOTE_USER }}
            TARGET: ${{ secrets.REMOTE_TARGET }}
            SCRIPT_AFTER: |
              ls -la
              pm2 restart chatting-app
              echo $RSYNC_STDOUT